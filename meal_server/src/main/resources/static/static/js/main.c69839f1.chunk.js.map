{"version":3,"sources":["Redux/actions/menuAction.js","api/index.js","utils/index.js","components/GenerateDropdownItem.js","pages/Home/Order/OrderSummary.css.js","pages/Home/Order/OrderSummary.jsx","pages/Home/Order/index.js","pages/Home/index.css.js","pages/Home/MenuList/MenuList.css.js","components/List/List.jsx","components/ItemModal/ItemModal.css.js","components/ItemModal/ItemModal.jsx","pages/Home/MenuList/MenuList.jsx","components/Navbar/Navigation.css.js","components/Navbar/Navigation.jsx","components/Restaurant/Restaurant.css.js","components/Button/GroupButton.css.js","components/Restaurant/Restaurant.jsx","components/Button/GroupButton.jsx","pages/Home/index.js","Redux/actions/orderAction.js","App.js","serviceWorker.js","Redux/reducers/menuReducer.js","Redux/reducers/orderReducer.js","Redux/reducers/index.js","index.js"],"names":["updateMenu","payload","type","get","url","a","token","fetch","headers","Authorization","res","ok","json","j","post","body","method","JSON","stringify","del","parsedjson","i","length","tem","itemId","getOrder","orderItems","normalizedOrder","orderItem","quantity","updateOrderItem","addOrderItem","deleteOrderItem","GenerateDropdownItem","props","dropdowns","push","Dropdown","Item","key","id","eventKey","onSelect","event","summary","gridRow","alignItems","marginLeft","marginTop","display","gridTemplateColumns","fontWeight","items","OrderSummary","onSelectDelete","handleSelectQuantityChange","bind","getSubtotal","price","toFixed","e","this","handleOnSelectQuantity","total","forEach","element","Number","replace","style","marginBottom","Container","Row","Col","sm","DropdownButton","title","size","onOrderItemDelete","Divider","name","updateItemPrice","styles","getQuantity","Component","Order","handleQuantity","order","updateOrder","timerID","setInterval","tick","newOrder","parseInt","apiData","clearInterval","menu","Object","keys","map","generateFullOrderItems","React","container","height","fontFamily","gridTemplateRows","nav","content","info","gridColumn","overflow","restaurant","borderLeft","overflowY","padding","backgroundColor","paddingTop","dropdown","position","List","data","start","end","slice","data-price","data-item","data-id","onClick","setModalShow","fetchDetails","modal","font","borderRadius","width","maxWidth","left","context","borderBottom","control","controlBtn","justifyContent","fontSize","color","border","quantityDisplay","footer","footerBtn","ItemModal","number","itemTotalPrice","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Button","minushandler","disabled","addhandler","variant","updateorder","command","MenuList","addHandler","setState","state","minusHandler","targetName","currentTarget","getAttribute","targetPrice","targetId","currentData","currentPrice","currentItemId","unitprice","modalShow","value","getMenu","then","result","filtered","Navbar","collapseOnSelect","sticky","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","Table","table","responsive","show","onHide","connect","dispatch","navigation","input","Navigation","bg","placeholder","onChange","handleChange","JumbotronStyle","buttonTrue","buttonFalse","Restaurant","Jumbotron","Home","preventDefault","currentList","newList","target","values","filter","item","lc","toLowerCase","includes","prevProps","App","Boolean","window","location","hostname","match","initialState","menuReducer","orderReducer","allReducers","combineReducers","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c69839f1.chunk.js","sourcesContent":["export const updateMenu = (payload) => ({\n  type: 'UPDATE_MENU',\n  payload\n})\n","export async function get(url, token = null) {\n  let res = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    let err = \"error for \" + url\n    throw err;\n  }\n\n  let j = await res.json();\n  return j;\n}\n\nexport async function post(url, body, token = null) {\n  let res = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    let err = \"error for \" + url\n    throw err\n    ;\n  }\n  let json = await res.json();\n  return json;\n}\n\nexport async function put(url, body, token = null) {\n  let res = await fetch(url, {\n    method: \"PUT\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    let err = \"error for \" + url\n    throw err;\n  }\n  let json = await res.json();\n  return json;\n}\n\nexport async function del(url, body = {}, token = null) {\n  let res = await fetch(url, {\n    method: \"DELETE\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    throw \"error for \" + url;\n  }\n  let json = await res.json();\n  return json;\n}\n","import { get, post, del } from \"../api\";\n\nexport async function getMenu() {\n  let json = await get(\"/api/menu\");\n  let parsedjson = {};\n  for (let i = 0, tem; i < json.length; i++) {\n    tem = json[i];\n    parsedjson[tem.itemId] = tem;\n  }\n  return parsedjson;\n}\n\nexport async function getOrder() {\n  let orderItems = await get(\"/api/order\");\n  let normalizedOrder = {};\n  for (let orderItem of orderItems) {\n    let { itemId, quantity } = orderItem;\n    normalizedOrder[itemId] = quantity;\n  }\n  return normalizedOrder;\n}\n\nexport async function updateOrderItem(itemId, quantity) {\n  let json = await post(\"/api/order\", {\n    itemId,\n    quantity\n  });\n  return json;\n}\n\n// add to existing quantity if order item exist\nexport async function addOrderItem(itemId, quantity) {\n  let json = await post(\"/api/order/add\", {\n    itemId,\n    quantity\n  });\n  return json;\n}\n\n\nexport async function deleteOrderItem(itemId) {\n  let json = await del(\"/api/order\", {\n    itemId\n  });\n  return json;\n}\n","import React from \"react\";\n\nimport { Dropdown } from \"react-bootstrap\";\n\nfunction GenerateDropdownItem(props) {\n  const dropdowns = [];\n  const MAX_QUANTITY = 5;\n\n  for(let i = 1; i <= MAX_QUANTITY; i++){\n    dropdowns.push(\n      <Dropdown.Item key={props.id+i} eventKey={i} onSelect={(eventKey, event) => props.onSelect(eventKey, event, props.id)}>{i}</Dropdown.Item>\n    );\n  }\n\n  return (\n    dropdowns\n  );\n}\n\nexport default GenerateDropdownItem;","export default {\n    summary: {\n        gridRow: '1/2',\n        alignItems: 'center',\n        marginLeft: '1rem',\n        marginTop: '2rem',\n        display: 'grid',\n        gridTemplateColumns: '86% 14%',\n        fontWeight: 'bold',\n    },\n    items: {\n        gridRow: '2/3',\n        marginTop: '2rem',\n    }\n}","import React, { Component } from \"react\";\nimport { DropdownButton, Dropdown, Container, Col, Row } from \"react-bootstrap\";\nimport GenerateDropdownItem from \"../../../components/GenerateDropdownItem\";\n\nimport styles from \"./OrderSummary.css.js\";\nimport CheckoutButton from \"../../../components/Button/CheckoutButton\";\n\nclass OrderSummary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectQuantityChange = this.handleSelectQuantityChange.bind(\n      this\n    );\n    this.getSubtotal = this.getSubtotal.bind(this);\n  }\n\n  // A method to update the item price based on its quantity\n  updateItemPrice(price, quantity) {\n    return (price * quantity).toFixed(2);\n  }\n\n  handleSelectQuantityChange(quantity, e, itemId) {\n    this.props.handleOnSelectQuantity(quantity, itemId);\n  }\n\n  // calculate the subtotal price here\n  getSubtotal(items) {\n    // debugger;\n    let total = 0;\n    items.forEach(element => {\n      total +=\n        Number(element.price.replace(/[^0-9.-]+/, \"\")) * element.quantity;\n    });\n    return total.toFixed(2);\n  }\n\n  getQuantity(items) {\n    let quantity = 0;\n    items.forEach(element => {\n      quantity += element.quantity;\n    });\n    return quantity;\n  }\n\n  onSelectDelete = () => {\n\n  }\n\n  render() {\n    const orderItems = this.props.orderItems;\n    const items = []; // to hold JSX\n\n    orderItems.forEach(element => {\n      items.push(\n        <div key={element.itemId}>\n          <div style={{ display: \"flex\", marginBottom: \"2%\" }}>\n            <Container>\n              <Row>\n                <Col sm={2}>\n                  <DropdownButton\n                    id=\"dropdown-basic-button\"\n                    title={element.quantity}\n                    size=\"sm\">\n                    <Dropdown.Item onSelect={() => {\n                      this.props.onOrderItemDelete(element.itemId);\n                    }}>\n                      Remove\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <GenerateDropdownItem\n                      id={element.itemId}\n                      onSelect={this.handleSelectQuantityChange} />\n                  </DropdownButton>\n                </Col>\n                <Col sm={8}>{element.name}</Col>\n                <Col sm={2}>\n                  {\"$\"}\n\n                  {this.updateItemPrice(\n                    Number(element.price.replace(/[^0-9.-]+/, \"\")),\n                    element.quantity\n                  )}\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <>\n        <div style={styles.summary}>\n          <div>Subtotal</div>\n          <div>\n            {\"$\"}\n            {this.getSubtotal(orderItems)}\n          </div>\n          <div>Quantity</div>\n          <div>\n            \n            {this.getQuantity(orderItems)}\n          </div>\n        </div>\n        <div style={styles.items}>{items}</div>\n        {/* <CheckoutButton /> */}\n      </>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React from \"react\";\nimport { getOrder, updateOrderItem, deleteOrderItem } from \"../../../utils\";\n\nimport OrderSummary from \"./OrderSummary.jsx\";\n\nexport default class Order extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuantity = this.handleQuantity.bind(this);\n  }\n\n  async componentDidMount() {\n    let order = await getOrder();\n    this.props.updateOrder(order);\n\n    this.timerID = setInterval(() => this.tick(), 500);\n  }\n\n  async handleQuantity(quantity, itemId) {\n    let newOrder = {\n      ...this.props.order,\n      [itemId]: parseInt(quantity)\n    };\n\n    this.props.updateOrder(newOrder);\n    await updateOrderItem(itemId, quantity);\n  }\n\n  async tick() {\n    let apiData = await getOrder();\n    this.props.updateOrder(apiData);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  // combine menu and order\n  generateFullOrderItems(menu, order) {\n    let arr = Object.keys(order).map(itemId => {\n      let quantity = order[itemId];\n      let { name, price } = menu[itemId];\n      return {\n        itemId,\n        quantity,\n        price,\n        name\n      };\n    });\n    return arr;\n  }\n\n  onOrderItemDelete = async itemId => {\n    await deleteOrderItem(itemId);\n  };\n\n  render() {\n    return (\n      <OrderSummary\n        orderItems={this.generateFullOrderItems(\n          this.props.menu,\n          this.props.order\n        )}\n        onOrderItemDelete={this.onOrderItemDelete}\n        handleOnSelectQuantity={this.handleQuantity}\n      />\n    );\n  }\n}\n","export default {\n    container: {\n        height: '100vh',\n        fontFamily: 'Open Sans',\n        display: 'grid',\n        gridTemplateRows: '8% 92%',\n      },\n    nav: {\n        gridRow: '1/2',\n    },\n    content: {\n        gridRow: '2/3',\n        display: 'grid',\n        gridTemplateColumns: '60% 40%',\n    },\n    info: {\n        gridColumn: '1/2',\n        display: 'grid',\n        gridTemplateRows: '25% 75%',\n        overflow: 'scroll'\n    },\n    restaurant: {\n        gridRow: '1/2',\n    },\n    menu: {\n        gridRow: '2/3',\n    },\n    order: {\n        gridColumn: '2/3',\n        display: 'grid',\n        gridTemplateRows: '10% 80% 10%',\n        borderLeft: '1px solid lightgrey', \n        overflowY: 'scroll',\n    }\n}","export default {\n    container: {\n        padding: '0rem 2rem',\n        display: 'grid',\n        gridTemplateRows: '10% 90%',\n    },\n    nav: {\n        backgroundColor: 'transparent',\n        gridRow: '1/2',\n    },\n    body: {\n        paddingTop: '5px',\n        gridRow: '2/3',\n        overflowY: 'scroll'\n    },\n    dropdown: {\n        position: 'relative',\n        // left: '100%',\n        // marginTop: '-6px',\n        // marginLeft: '-1px',\n    }\n}","import React, { Component } from 'react'\n\nexport default class List extends Component {\n\n    render() {\n        const { data, start, end } = this.props;\n\n        return (\n            <>\n                <tbody>\n                    {Object.keys(data).slice(start, end).map((key) => (\n                        <tr\n                            key={key}\n                            data-price={data[key].price}\n                            data-item={data[key].name}\n                            data-id={data[key].itemId}\n                            onClick={(event) => {\n                                this.props.setModalShow(true);\n                                this.props.fetchDetails(event);\n                            }}>\n                            <td>{data[key].itemId}</td>\n                            <td>{data[key].name}</td>\n                            <td>{data[key].price}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </>\n        )\n    }\n}\n","export default {\n    modal: {\n        font: 'inherit',\n        borderRadius: '10px',\n        width: '40%',\n        maxWidth: '40% !important',\n        left: '30%',\n    },\n    context: {\n        display: 'grid',\n        gridTemplateColumns: '20% auto 35%',\n        alignItems: 'center',\n        borderBottom: '1px solid lightgrey',\n    },\n    quantity: {\n        gridColumn: '1/2',\n        display: 'inline-grid',\n        padding: '0px',\n        overflowY: 'auto',\n        alignItems: 'center',\n    },\n    control: {\n        gridColumn: '3/3',\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n    },\n    controlBtn: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: '5px',\n        fontSize: '1.2rem',\n        width: '45px',\n        color: 'black',\n        backgroundColor: 'transparent',\n        border: '1px solid black',\n        borderRadius: '65%',\n    },\n    quantityDisplay: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    footer: {\n        display: 'grid',\n        gridTemplateColumns: '40% auto 20%',\n        padding: '16px',\n        overflowY: 'auto',\n        alignItems: 'center',\n    },\n    footerBtn: {\n        gridColumn: '3/3',\n    }\n}","import React, { Component } from 'react'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nimport styles from './ItemModal.css.js'\n\nclass ItemModal extends Component {\n    render() {\n        const { name, price } = this.props\n\n        let number = Number(price.replace(/[^0-9.-]+/, \"\"));\n        let itemTotalPrice = (this.props.quantity * number).toFixed(2)\n\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                style={styles.modal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        {name}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={styles.context}>\n                    <div style={styles.quantity}>Quantity</div>\n                    <div style={styles.control}>\n                        <Button style={styles.controlBtn} onClick={this.props.minushandler} disabled={this.props.quantity < 2}>-</Button>\n                        <div style={styles.quantityDisplay}>{this.props.quantity}</div>\n                        <Button style={styles.controlBtn} onClick={this.props.addhandler} disabled={this.props.quantity > 4}>+</Button>\n                    </div>\n                </Modal.Body>\n                <Modal.Body style={styles.footer}>\n                    <div>Item total: ${itemTotalPrice}</div>\n                    <Button variant=\"primary\" onClick={this.props.updateorder} style={styles.footerBtn}>{this.props.command}</Button>\n                </Modal.Body>\n            </Modal >\n        );\n    }\n}\n\nexport default ItemModal;","import React, { Component } from \"react\";\nimport { Table, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\n\nimport { getMenu, addOrderItem } from \"../../../utils\";\nimport { connect } from \"react-redux\";\nimport { updateMenu } from \"../../../Redux/actions/menuAction\";\n\nimport styles from \"./MenuList.css.js\";\nimport List from '../../../components/List/List';\nimport ItemModal from \"../../../components/ItemModal/ItemModal\";\n\nclass MenuList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentData: null,\n            currentPrice: \"$0.00\",\n            currentItemId: null,\n            quantity: 1,\n            unitprice: 8.95,\n            modalShow: false,\n            command: \"Add\",\n            menu: [],\n        };\n\n        this.setModalShow = this.setModalShow.bind(this);\n        this.fetchDetails = this.fetchDetails.bind(this);\n    }\n\n    setModalShow(value) {\n        this.setState({\n            modalShow: value,\n            quantity: 1\n        });\n    };\n\n    addHandler = () => {\n        this.setState({\n            quantity: this.state.quantity + 1\n        });\n    };\n\n    minusHandler = () => {\n        this.setState({\n            quantity: this.state.quantity - 1\n        });\n    };\n\n    fetchDetails = event => {\n        const targetName = event.currentTarget.getAttribute(\"data-item\");\n        const targetPrice = event.currentTarget.getAttribute(\"data-price\");\n        const targetId = event.currentTarget.getAttribute(\"data-id\");\n\n        this.setState({\n            currentData: targetName,\n            currentPrice: targetPrice,\n            currentItemId: targetId,\n        });\n    };\n\n    async updateOrder(value) {\n        // use fetch to call api to push data to database.\n        this.setState(state => ({\n            ...state,\n            modalShow: value,\n            quantity: 1\n        }));\n\n        let itemId = this.state.currentItemId;\n        let quantity = this.state.quantity;\n\n        await addOrderItem(itemId, quantity);\n    }\n\n    componentDidMount() {\n        // fetch the project name, once it retrieves resolve the promsie and update the state.\n        getMenu().then(result => this.props.updateMenu(result));\n    }\n\n    render() {\n        const { data, filtered } = this.props;\n        const { currentData, currentPrice } = this.state;\n        return (\n            <div style={styles.container}>\n                <Navbar collapseOnSelect sticky=\"top\" fixed=\"top\" style={styles.nav}>\n                    <Navbar.Brand href=\"#home\">Menu</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"#lunch-special\">Lunch Special</Nav.Link>\n                            <Nav.Link href=\"#appetizers\">Appetizers</Nav.Link>\n                            <Nav.Link href=\"#chef\">Chef's Specialties</Nav.Link>\n                            <NavDropdown title=\"More\" id=\"collasible-nav-dropdown\" style={styles.dropdown}>\n                                <NavDropdown.Item href=\"#beef\">Beef / Lamb</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#chicken\">Chicken / Duck</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#pork\">Pork</NavDropdown.Item>\n                            </NavDropdown>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n                {/* lunch special */}\n                <div style={styles.body}>\n                    <Table style={styles.table} responsive>\n                        <thead id=\"lunch-special\">\n                            <tr>\n                                <th>ID</th>\n                                <th>Lunch Special</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <List data={filtered} start={0} end={58} setModalShow={this.setModalShow} fetchDetails={this.fetchDetails} />\n                        {/* appetizers */}\n                        <thead id=\"appetizers\">\n                            <tr>\n                                <th>ID</th>\n                                <th>Appetizers</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <List data={filtered} start={56} end={86} setModalShow={this.setModalShow} fetchDetails={this.fetchDetails} />\n                        {/* Chef's Specialties */}\n                        <thead id=\"chef\">\n                            <tr>\n                                <th>ID</th>\n                                <th>Chef's Specialties</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <List data={filtered} start={83} end={102} setModalShow={this.setModalShow} fetchDetails={this.fetchDetails} />\n                        {/* Beef / Lamb */}\n                        <thead id=\"beef\">\n                            <tr>\n                                <th>ID</th>\n                                <th>Beef / Lamb</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <List data={filtered} start={101} end={117} setModalShow={this.setModalShow} fetchDetails={this.fetchDetails} />\n                        {/* Pork */}\n                        <thead id=\"chicken\">\n                            <tr>\n                                <th>ID</th>\n                                <th>Chicken / Duck</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <List data={filtered} start={138} end={158} setModalShow={this.setModalShow} fetchDetails={this.fetchDetails} />\n                        {/* Chicken */}\n                        <thead id=\"pork\">\n                            <tr>\n                                <th>ID</th>\n                                <th>Pork</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <List data={filtered} start={117} end={138} setModalShow={this.setModalShow} fetchDetails={this.fetchDetails} />\n                    </Table>\n                    <ItemModal\n                        data={data}\n                        name={currentData}\n                        price={currentPrice}\n                        show={this.state.modalShow}\n                        quantity={this.state.quantity}\n                        addhandler={this.addHandler}\n                        minushandler={this.minusHandler}\n                        unitprice={this.state.unitprice}\n                        command={this.state.command}\n                        onHide={() => this.setModalShow(false)}\n                        updateorder={() => this.updateOrder(false)} />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.menu\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateMenu: menu => dispatch(updateMenu(menu))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuList);\n","export default {\n    navigation: {\n        height: 'auto',\n    },\n    input: {\n        height: '30px',\n        borderRadius: '2px',\n        border: 'none',\n        borderBottom: '1px solid #E0E0E0',\n    }\n}","import React from 'react'\nimport { Nav, Navbar } from 'react-bootstrap'\n\nimport styles from './Navigation.css.js'\n\nconst Navigation = (props) => {\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\" fixed=\"top\" style={styles.navigation}>\n                <Navbar.Brand href=\"/\">Order Food</Navbar.Brand>\n                <Nav className=\"mr-auto\" />\n                <input type=\"text\" placeholder=\"Search\" onChange={props.handleChange} style={styles.input}/>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default Navigation;","export default {\n    container: {\n        borderBottom: '1px solid lightgrey',\n        height: 'auto',\n    },\n    JumbotronStyle: {\n        backgroundColor: 'white',\n        marginBottom: '0rem',\n        padding: '1.5em 2em'\n    },\n}","export default {\n    modal: {\n        font: 'inherit',\n        borderRadius: '10px',\n        width: '40%',\n        maxWidth: '40% !important',\n        left: '30%',\n    },\n    buttonTrue: {\n        color: '#007bff',\n        backgroundColor: 'white',\n    },\n    buttonFalse: {\n        color: 'white',\n        backgroundColor: '#007bff',\n    },\n}","import React, { Component } from 'react'\nimport { Jumbotron } from 'react-bootstrap'\n\nimport styles from './Restaurant.css.js'\nimport GroupButton from '../Button/GroupButton'\n\nexport default class Restaurant extends Component {\n\n    render() {\n\n        return (\n            <div style={styles.container}>\n                <Jumbotron style={styles.JumbotronStyle}>\n                    <h1>Taipei Cuisine</h1>\n                    <p>68 Billings Rd, Quincy, MA 02171</p>\n                    {/* <GroupButton /> */}\n                </Jumbotron>\n            </div >\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ButtonGroup, Button } from 'react-bootstrap'\n\nimport styles from './GroupButton.css.js'\n\nexport default class GroupButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            button: true\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = () => {\n        this.setState({\n            button: !this.state.button\n        })\n    }\n\n    // bgColorShawn: \"007bff\",\n    render() {\n        const { button } = this.state\n\n        return (\n            <div>\n                <ButtonGroup toggle>\n                    <Button\n                        style={button ? styles.buttonFalse : styles.buttonTrue}\n                        onClick={this.handleClick}\n                        defaultChecked>\n                        Steve\n                    </Button>\n                    <Button\n                        style={button ? styles.buttonTrue : styles.buttonFalse}\n                        onClick={this.handleClick}>\n                        Shawn\n                    </Button>\n                </ButtonGroup>\n            </div >\n        )\n    }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateOrder } from \"../../Redux/actions/orderAction\";\nimport { updateMenu } from \"../../Redux/actions/menuAction\";\n\nimport Order from \"./Order\";\nimport styles from './index.css.js'\nimport MenuList from \"./MenuList/MenuList\";\nimport Navigation from \"../../components/Navbar/Navigation\";\nimport Restaurant from \"../../components/Restaurant/Restaurant\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filtered: [],\n    };\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.menu\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.menu !== this.props.menu) {\n      this.setState({\n        filtered: this.props.menu\n      });\n    }\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    let currentList = [];\n    let newList = [];\n\n    if (e.target.value !== \"\") {\n      currentList = this.props.menu;\n      // console.log(\"Current list is\", currentList)\n      newList = Object.values(currentList).filter((item) => {\n        const lc = item.name.toLowerCase()\n        const filter = e.target.value.toLowerCase()\n\n        return lc.includes(filter);\n      })\n      // console.log(\"New list is\", newList)\n    } else {\n      newList = this.props.menu;\n    }\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.nav}>\n          <Navigation handleChange={this.handleChange} />\n        </div>\n        <div style={styles.content}>\n          <div style={styles.info}>\n            <Restaurant style={styles.restaurant} />\n            <MenuList style={styles.menu} order={this.props.order} filtered={this.state.filtered} />\n          </div>\n          <div style={styles.order}>\n            <Order\n              updateOrder={this.props.updateOrder}\n              order={this.props.order}\n              menu={this.props.menu} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  order: state.order,\n  menu: state.menu,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateOrder: order => dispatch(updateOrder(order)),\n  updateMenu: menu => dispatch(updateMenu(menu))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","export const updateOrder = (payload) => ({\n  type: 'UPDATE_ORDER',\n  payload\n})\n","import React from \"react\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {}\n\nconst menuReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'UPDATE_MENU':\n      return payload;\n    default:\n      return state\n  }\n}\nexport default menuReducer;","const initialState = {}\n\nconst orderReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'UPDATE_ORDER':\n      return payload;\n\n    default:\n      return state\n  }\n}\nexport default orderReducer;","import { combineReducers } from \"redux\";\nimport menuReducer from './menuReducer'\nimport orderReducer from './orderReducer'\n\nconst allReducers = combineReducers({\n  menu: menuReducer,\n  order: orderReducer\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport allReducer from './Redux/reducers'\nimport { Provider } from 'react-redux'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\\\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}